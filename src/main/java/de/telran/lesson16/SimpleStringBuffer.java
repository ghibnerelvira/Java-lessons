package de.telran.lesson16;

public class SimpleStringBuffer {

    //append() - метод добавляет строковое представление к последовательности.
    //insert() - метод вставляет строковое представление в эту последовательность.
    //replace(int start, int end, String str) - метод заменяет символы в подстроке этой последовательности символами в указанной строке String.
    //int capacity() - метод возвращает текущую емкость.
    //delete(int start, int end) - метод удаляет символы в подстроке этой последовательности.
    //int indexOf() - метод возвращает индекс в этой строке первого вхождения указанной подстроки.
    //int length() - метод возвращает длину (количество символов).
    //reverse() - метод приводит к замене этой последовательности символов обратной последовательностью.
    //substring() - метод возвращает новый объект String, содержащий подпоследовательность символов, содержащихся в данный момент в этой последовательности символов.
    //toString() - метод возвращает строку, представляющую данные в этой последовательности.
    public static void main(String[] args) {
        // StringBuffer в Java представляет изменяемую последовательность символов.
        // StringBuffer может содержать символы и подстроки, вставленные в середину или добавленные в конец.
        // -> StringBuffer синхронизирован.
        // -> Экземпляры StringBuffer безопасны для использования несколькими потоками.
        // для книг
        // аналогичен с String bilder ( анологичные методы) -> он работает быстрее, но не синхронизирован

    }
}
